========================================
Test cases for text_indentation function
========================================

	>>> text_indentation = __import__('5-text_indentation').text_indentation

	>>> text = """Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
	... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
	... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
	... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
	... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
	... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
	... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
	... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
	... beatiorem! Iam ruinas videres"""


Normal cases:

	>>> text_indentation(text)
	Lorem ipsum dolor sit amet, consectetur adipiscing elit.
	<BLANKLINE>
	Quonam modo?
	<BLANKLINE>
	Utrum igitur tibi litteram videor an totas paginas commovere?
	<BLANKLINE>
	Non autem hoc:
	<BLANKLINE>
	igitur ne illud quidem.
	<BLANKLINE>
	Fortasse id optimum, sed ubi illud:
	<BLANKLINE>
	Plus semper voluptatis?
	<BLANKLINE>
	Teneo, inquit, finem illi videri nihil dolere.
	<BLANKLINE>
	Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
	<BLANKLINE>
	Si id dicis, vicimus.
	<BLANKLINE>
	Inde sermone vario sex illa a Dipylo stadia confecimus.
	<BLANKLINE>
	Sin aliud quid voles, postea.
	<BLANKLINE>
	Quae animi affectio suum cuique tribuens atque hanc, quam dico.
	<BLANKLINE>
	Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

	>>> text_indentation("	The magic you are looking for. Is in the work: you are avoiding?")
	The magic you are looking for.
	<BLANKLINE>
	Is in the work:
	<BLANKLINE>
	you are avoiding?
	<BLANKLINE>

	>>> text_indentation("")

	>>> text_indentation(".:")
	.:

	>>> text_indentation(".?:")
	.?
	<BLANKLINE>
	:

	>>> text_indentation(".:?")
	.:?
	<BLANKLINE>

	>>> text_indentation(":?.")
	:?
	<BLANKLINE>
	.

Non string arg:

	>>> text_indentation(12)
	Traceback (most recent call last):
	TypeError: text must be a string

	>>> text_indentation(None)
	Traceback (most recent call last):
	TypeError: text must be a string
	
	>>> text_indentation(["This", "is a", "list"])
	Traceback (most recent call last):
	TypeError: text must be a string

Wrong num of args:

	>>> text_indentation()
	Traceback (most recent call last):
	TypeError: text_indentation() missing 1 required positional argument: 'text'

	>>> text_indentation('first.', 'second:')
	Traceback (most recent call last):
	TypeError: text_indentation() takes 1 positional argument but 2 were given

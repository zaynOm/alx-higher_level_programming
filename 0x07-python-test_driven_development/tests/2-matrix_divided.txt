======================================
Test cases for matrix_divided function
======================================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[5, 3, 9.5], [6.2, 11, 2]]

Normal cases
------------
	>>> matrix_divided(matrix, 2)
	[[2.5, 1.5, 4.75], [3.1, 5.5, 1.0]]

	>>> matrix_divided(matrix, 3)
	[[1.67, 1.0, 3.17], [2.07, 3.67, 0.67]]

	>>> matrix_divided(matrix, 1)
	[[5.0, 3.0, 9.5], [6.2, 11.0, 2.0]]

Non number divider
------------------
	>>> matrix_divided(matrix, 'two')
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided(matrix, True)
	Traceback (most recent call last):
	TypeError: div must be a number

Division by zero 0
------------------
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

matrix is not a list
--------------------
	>>> matrix_divided((1, 5), 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided('list of lists', 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix has a non list element
-----------------------------
	>>> matrix_divided(['first', 'second'], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided([2, 5, 7], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix has a non number element
-------------------------------
	>>> matrix_divided([[1, 5, 7], [4, 'five', 9]], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[3.5, True, 12.5], [4, 80, 9]], 2)
	[[1.75, 0.5, 6.25], [2.0, 40.0, 4.5]]

diffirent matrix row size
-------------------------
	>>> matrix_divided([[4, 33], [5, 8, 6]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size


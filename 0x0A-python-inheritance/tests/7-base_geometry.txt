Test cases for '7-base_geometry' module
---------------------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("money", -23)
Traceback (most recent call last):
ValueError: money must be greater than 0
>>> bg.integer_validator("money", 0)
Traceback (most recent call last):
ValueError: money must be greater than 0

>>> bg.integer_validator("age", 10.54)
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("name", "hox")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", [])
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", (3,))
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", {5, 2})
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", False)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("count")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'
